final class org.apache.commons.lang3.time.FastDateFormat$1 extends org.apache.commons.lang3.time.FormatCache
{

    void <init>()
    {
        org.apache.commons.lang3.time.FastDateFormat$1 this;

        this := @this: org.apache.commons.lang3.time.FastDateFormat$1;

        specialinvoke this.<org.apache.commons.lang3.time.FormatCache: void <init>()>();

        return;
    }

    protected org.apache.commons.lang3.time.FastDateFormat createInstance(java.lang.String, java.util.TimeZone, java.util.Locale)
    {
        java.util.TimeZone timeZone;
        java.util.Locale locale;
        org.apache.commons.lang3.time.FastDateFormat$1 this;
        java.lang.String pattern;
        org.apache.commons.lang3.time.FastDateFormat $stack4;

        this := @this: org.apache.commons.lang3.time.FastDateFormat$1;

        pattern := @parameter0: java.lang.String;

        timeZone := @parameter1: java.util.TimeZone;

        locale := @parameter2: java.util.Locale;

        $stack4 = new org.apache.commons.lang3.time.FastDateFormat;

        specialinvoke $stack4.<org.apache.commons.lang3.time.FastDateFormat: void <init>(java.lang.String,java.util.TimeZone,java.util.Locale)>(pattern, timeZone, locale);

        return $stack4;
    }

    protected volatile java.text.Format createInstance(java.lang.String, java.util.TimeZone, java.util.Locale)
    {
        org.apache.commons.lang3.time.FastDateFormat$1 this;
        java.util.TimeZone x1;
        java.util.Locale x2;
        java.lang.String x0;
        org.apache.commons.lang3.time.FastDateFormat $stack4;

        this := @this: org.apache.commons.lang3.time.FastDateFormat$1;

        x0 := @parameter0: java.lang.String;

        x1 := @parameter1: java.util.TimeZone;

        x2 := @parameter2: java.util.Locale;

        $stack4 = virtualinvoke this.<org.apache.commons.lang3.time.FastDateFormat$1: org.apache.commons.lang3.time.FastDateFormat createInstance(java.lang.String,java.util.TimeZone,java.util.Locale)>(x0, x1, x2);

        return $stack4;
    }
}
