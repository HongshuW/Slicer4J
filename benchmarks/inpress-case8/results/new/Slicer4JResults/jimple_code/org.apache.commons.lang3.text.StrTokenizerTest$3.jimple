class org.apache.commons.lang3.text.StrTokenizerTest$3 extends org.apache.commons.lang3.text.StrTokenizer
{
    final org.apache.commons.lang3.text.StrTokenizerTest this$0;

    void <init>(org.apache.commons.lang3.text.StrTokenizerTest, java.lang.String)
    {
        org.apache.commons.lang3.text.StrTokenizerTest l1;
        java.lang.String x0;
        org.apache.commons.lang3.text.StrTokenizerTest$3 this;

        this := @this: org.apache.commons.lang3.text.StrTokenizerTest$3;

        l1 := @parameter0: org.apache.commons.lang3.text.StrTokenizerTest;

        x0 := @parameter1: java.lang.String;

        this.<org.apache.commons.lang3.text.StrTokenizerTest$3: org.apache.commons.lang3.text.StrTokenizerTest this$0> = l1;

        specialinvoke this.<org.apache.commons.lang3.text.StrTokenizer: void <init>(java.lang.String)>(x0);

        return;
    }

    protected java.util.List tokenize(char[], int, int)
    {
        java.util.List $stack5;
        int offset, count;
        char[] chars;
        org.apache.commons.lang3.text.StrTokenizerTest$3 this;

        this := @this: org.apache.commons.lang3.text.StrTokenizerTest$3;

        chars := @parameter0: char[];

        offset := @parameter1: int;

        count := @parameter2: int;

        $stack5 = specialinvoke this.<org.apache.commons.lang3.text.StrTokenizer: java.util.List tokenize(char[],int,int)>(chars, offset, count);

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($stack5);

        return $stack5;
    }
}
