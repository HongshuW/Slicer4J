public class org.apache.commons.lang3.SystemUtilsTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.lang3.SystemUtilsTest this;

        this := @this: org.apache.commons.lang3.SystemUtilsTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testConstructor()
    {
        org.apache.commons.lang3.SystemUtils $stack2;
        long $stack6;
        java.lang.reflect.Constructor $stack7;
        java.lang.reflect.Constructor[] $stack4;
        org.apache.commons.lang3.SystemUtilsTest this;
        int $stack5, $stack8, $stack11, $stack14;
        java.lang.Class $stack3, $stack10, $stack13;
        boolean $stack9, $stack12, $stack15;

        this := @this: org.apache.commons.lang3.SystemUtilsTest;

        $stack2 = new org.apache.commons.lang3.SystemUtils;

        specialinvoke $stack2.<org.apache.commons.lang3.SystemUtils: void <init>()>();

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($stack2);

        $stack3 = class "Lorg/apache/commons/lang3/SystemUtils;";

        $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>();

        $stack5 = lengthof $stack4;

        $stack6 = (long) $stack5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $stack6);

        $stack7 = $stack4[0];

        $stack8 = virtualinvoke $stack7.<java.lang.reflect.Constructor: int getModifiers()>();

        $stack9 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($stack8);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack9);

        $stack10 = class "Lorg/apache/commons/lang3/SystemUtils;";

        $stack11 = virtualinvoke $stack10.<java.lang.Class: int getModifiers()>();

        $stack12 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($stack11);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack12);

        $stack13 = class "Lorg/apache/commons/lang3/SystemUtils;";

        $stack14 = virtualinvoke $stack13.<java.lang.Class: int getModifiers()>();

        $stack15 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($stack14);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack15);

        return;
    }

    public void testGetJavaHome()
    {
        org.apache.commons.lang3.SystemUtilsTest this;
        java.io.File $stack2;
        boolean $stack3;

        this := @this: org.apache.commons.lang3.SystemUtilsTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.io.File getJavaHome()>();

        staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($stack2);

        $stack3 = virtualinvoke $stack2.<java.io.File: boolean exists()>();

        staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($stack3);

        return;
    }

    public void testGetJavaIoTmpDir()
    {
        org.apache.commons.lang3.SystemUtilsTest this;
        java.io.File $stack2;
        boolean $stack3;

        this := @this: org.apache.commons.lang3.SystemUtilsTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.io.File getJavaIoTmpDir()>();

        staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($stack2);

        $stack3 = virtualinvoke $stack2.<java.io.File: boolean exists()>();

        staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($stack3);

        return;
    }

    public void testGetUserDir()
    {
        org.apache.commons.lang3.SystemUtilsTest this;
        java.io.File $stack2;
        boolean $stack3;

        this := @this: org.apache.commons.lang3.SystemUtilsTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.io.File getUserDir()>();

        staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($stack2);

        $stack3 = virtualinvoke $stack2.<java.io.File: boolean exists()>();

        staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($stack3);

        return;
    }

    public void testGetUserHome()
    {
        org.apache.commons.lang3.SystemUtilsTest this;
        java.io.File $stack2;
        boolean $stack3;

        this := @this: org.apache.commons.lang3.SystemUtilsTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.io.File getUserHome()>();

        staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($stack2);

        $stack3 = virtualinvoke $stack2.<java.io.File: boolean exists()>();

        staticinvoke <junit.framework.Assert: void assertTrue(boolean)>($stack3);

        return;
    }

    public void testIS_JAVA()
    {
        org.apache.commons.lang3.SystemUtilsTest this;
        boolean $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack38, $stack39, $stack40, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack50, $stack51, $stack52, $stack53, $stack54, $stack55, $stack56, $stack57, $stack58;
        java.lang.String $stack2;
        java.io.PrintStream $stack9;

        this := @this: org.apache.commons.lang3.SystemUtilsTest;

        $stack2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version");

        if $stack2 != null goto label1;

        $stack52 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_1>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack52);

        $stack53 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_2>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack53);

        $stack54 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_3>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack54);

        $stack55 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_4>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack55);

        $stack56 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_5>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack56);

        $stack57 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_6>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack57);

        $stack58 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_7>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack58);

        goto label8;

     label1:
        $stack3 = virtualinvoke $stack2.<java.lang.String: boolean startsWith(java.lang.String)>("1.1");

        if $stack3 == 0 goto label2;

        $stack45 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_1>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack45);

        $stack46 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_2>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack46);

        $stack47 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_3>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack47);

        $stack48 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_4>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack48);

        $stack49 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_5>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack49);

        $stack50 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_6>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack50);

        $stack51 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_7>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack51);

        goto label8;

     label2:
        $stack4 = virtualinvoke $stack2.<java.lang.String: boolean startsWith(java.lang.String)>("1.2");

        if $stack4 == 0 goto label3;

        $stack38 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_1>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack38);

        $stack39 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_2>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack39);

        $stack40 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_3>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack40);

        $stack41 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_4>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack41);

        $stack42 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_5>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack42);

        $stack43 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_6>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack43);

        $stack44 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_7>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack44);

        goto label8;

     label3:
        $stack5 = virtualinvoke $stack2.<java.lang.String: boolean startsWith(java.lang.String)>("1.3");

        if $stack5 == 0 goto label4;

        $stack31 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_1>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack31);

        $stack32 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_2>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack32);

        $stack33 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_3>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack33);

        $stack34 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_4>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack34);

        $stack35 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_5>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack35);

        $stack36 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_6>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack36);

        $stack37 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_7>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack37);

        goto label8;

     label4:
        $stack6 = virtualinvoke $stack2.<java.lang.String: boolean startsWith(java.lang.String)>("1.4");

        if $stack6 == 0 goto label5;

        $stack24 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_1>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack24);

        $stack25 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_2>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack25);

        $stack26 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_3>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack26);

        $stack27 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_4>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack27);

        $stack28 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_5>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack28);

        $stack29 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_6>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack29);

        $stack30 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_7>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack30);

        goto label8;

     label5:
        $stack7 = virtualinvoke $stack2.<java.lang.String: boolean startsWith(java.lang.String)>("1.5");

        if $stack7 == 0 goto label6;

        $stack17 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_1>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack17);

        $stack18 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_2>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack18);

        $stack19 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_3>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack19);

        $stack20 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_4>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack20);

        $stack21 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_5>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack21);

        $stack22 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_6>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack22);

        $stack23 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_7>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack23);

        goto label8;

     label6:
        $stack8 = virtualinvoke $stack2.<java.lang.String: boolean startsWith(java.lang.String)>("1.6");

        if $stack8 == 0 goto label7;

        $stack10 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_1>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack10);

        $stack11 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_2>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack11);

        $stack12 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_3>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack12);

        $stack13 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_4>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack13);

        $stack14 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_5>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack14);

        $stack15 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_6>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack15);

        $stack16 = <org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_7>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack16);

        goto label8;

     label7:
        $stack9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack9.<java.io.PrintStream: void println(java.lang.String)>("Can\'t test IS_JAVA value");

     label8:
        return;
    }

    public void testIS_OS()
    {
        org.apache.commons.lang3.SystemUtilsTest this;
        java.util.Locale $stack5;
        boolean $stack3, $stack4, $stack7, $stack8, $stack9, $stack10, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33;
        java.lang.String $stack2, $stack6;
        java.io.PrintStream $stack11;

        this := @this: org.apache.commons.lang3.SystemUtilsTest;

        $stack2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name");

        if $stack2 != null goto label1;

        $stack29 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack29);

        $stack30 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_UNIX>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack30);

        $stack31 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_SOLARIS>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack31);

        $stack32 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_LINUX>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack32);

        $stack33 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack33);

        goto label8;

     label1:
        $stack3 = virtualinvoke $stack2.<java.lang.String: boolean startsWith(java.lang.String)>("Windows");

        if $stack3 == 0 goto label2;

        $stack27 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_UNIX>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack27);

        $stack28 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack28);

        goto label8;

     label2:
        $stack4 = virtualinvoke $stack2.<java.lang.String: boolean startsWith(java.lang.String)>("Solaris");

        if $stack4 == 0 goto label3;

        $stack24 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_SOLARIS>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack24);

        $stack25 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_UNIX>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack25);

        $stack26 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack26);

        goto label8;

     label3:
        $stack5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $stack6 = virtualinvoke $stack2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.String: boolean startsWith(java.lang.String)>("linux");

        if $stack7 == 0 goto label4;

        $stack21 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_LINUX>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack21);

        $stack22 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_UNIX>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack22);

        $stack23 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack23);

        goto label8;

     label4:
        $stack8 = virtualinvoke $stack2.<java.lang.String: boolean startsWith(java.lang.String)>("Mac OS X");

        if $stack8 == 0 goto label5;

        $stack18 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack18);

        $stack19 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_UNIX>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack19);

        $stack20 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack20);

        goto label8;

     label5:
        $stack9 = virtualinvoke $stack2.<java.lang.String: boolean startsWith(java.lang.String)>("OS/2");

        if $stack9 == 0 goto label6;

        $stack15 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_OS2>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack15);

        $stack16 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_UNIX>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack16);

        $stack17 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack17);

        goto label8;

     label6:
        $stack10 = virtualinvoke $stack2.<java.lang.String: boolean startsWith(java.lang.String)>("SunOS");

        if $stack10 == 0 goto label7;

        $stack12 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_SUN_OS>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack12);

        $stack13 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_UNIX>;

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack13);

        $stack14 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS>;

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack14);

        goto label8;

     label7:
        $stack11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack11.<java.io.PrintStream: void println(java.lang.String)>("Can\'t test IS_OS value");

     label8:
        return;
    }

    public void testJavaVersionMatches()
    {
        org.apache.commons.lang3.SystemUtilsTest this;
        boolean $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack38, $stack39, $stack40, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack50, $stack51, $stack52, $stack53, $stack54, $stack55, $stack56, $stack57, $stack58, $stack59, $stack60, $stack61, $stack62, $stack63, $stack64, $stack65, $stack66, $stack67, $stack68, $stack69, $stack70, $stack71, $stack72, $stack73, $stack74, $stack75, $stack76, $stack77, $stack78, $stack79, $stack80, $stack81, $stack82, $stack83, $stack84, $stack85, $stack86, $stack87, $stack88, $stack89, $stack90, $stack91, $stack92, $stack93, $stack94, $stack95, $stack96, $stack97, $stack98, $stack99, $stack100, $stack101, $stack102, $stack103, $stack104, $stack105;

        this := @this: org.apache.commons.lang3.SystemUtilsTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>(null, "1.0");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack2);

        $stack3 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>(null, "1.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack3);

        $stack4 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>(null, "1.2");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack4);

        $stack5 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>(null, "1.3");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack5);

        $stack6 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>(null, "1.4");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack6);

        $stack7 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>(null, "1.5");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack7);

        $stack8 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>(null, "1.6");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack8);

        $stack9 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>(null, "1.7");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack9);

        $stack10 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("", "1.0");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack10);

        $stack11 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("", "1.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack11);

        $stack12 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("", "1.2");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack12);

        $stack13 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("", "1.3");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack13);

        $stack14 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("", "1.4");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack14);

        $stack15 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("", "1.5");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack15);

        $stack16 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("", "1.6");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack16);

        $stack17 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("", "1.7");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack17);

        $stack18 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.0", "1.0");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack18);

        $stack19 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.0", "1.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack19);

        $stack20 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.0", "1.2");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack20);

        $stack21 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.0", "1.3");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack21);

        $stack22 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.0", "1.4");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack22);

        $stack23 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.0", "1.5");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack23);

        $stack24 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.0", "1.6");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack24);

        $stack25 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.0", "1.7");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack25);

        $stack26 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.1", "1.0");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack26);

        $stack27 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.1", "1.1");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack27);

        $stack28 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.1", "1.2");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack28);

        $stack29 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.1", "1.3");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack29);

        $stack30 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.1", "1.4");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack30);

        $stack31 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.1", "1.5");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack31);

        $stack32 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.1", "1.6");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack32);

        $stack33 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.1", "1.7");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack33);

        $stack34 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.2", "1.0");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack34);

        $stack35 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.2", "1.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack35);

        $stack36 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.2", "1.2");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack36);

        $stack37 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.2", "1.3");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack37);

        $stack38 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.2", "1.4");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack38);

        $stack39 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.2", "1.5");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack39);

        $stack40 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.2", "1.6");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack40);

        $stack41 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.2", "1.7");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack41);

        $stack42 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.0", "1.0");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack42);

        $stack43 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.0", "1.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack43);

        $stack44 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.0", "1.2");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack44);

        $stack45 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.0", "1.3");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack45);

        $stack46 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.0", "1.4");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack46);

        $stack47 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.0", "1.5");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack47);

        $stack48 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.0", "1.6");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack48);

        $stack49 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.0", "1.7");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack49);

        $stack50 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.1", "1.0");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack50);

        $stack51 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.1", "1.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack51);

        $stack52 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.1", "1.2");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack52);

        $stack53 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.1", "1.3");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack53);

        $stack54 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.1", "1.4");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack54);

        $stack55 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.1", "1.5");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack55);

        $stack56 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.1", "1.6");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack56);

        $stack57 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.3.1", "1.7");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack57);

        $stack58 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.0", "1.0");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack58);

        $stack59 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.0", "1.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack59);

        $stack60 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.0", "1.2");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack60);

        $stack61 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.0", "1.3");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack61);

        $stack62 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.0", "1.4");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack62);

        $stack63 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.0", "1.5");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack63);

        $stack64 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.0", "1.6");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack64);

        $stack65 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.0", "1.7");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack65);

        $stack66 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.1", "1.0");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack66);

        $stack67 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.1", "1.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack67);

        $stack68 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.1", "1.2");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack68);

        $stack69 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.1", "1.3");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack69);

        $stack70 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.1", "1.4");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack70);

        $stack71 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.1", "1.5");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack71);

        $stack72 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.1", "1.6");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack72);

        $stack73 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.1", "1.7");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack73);

        $stack74 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.2", "1.0");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack74);

        $stack75 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.2", "1.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack75);

        $stack76 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.2", "1.2");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack76);

        $stack77 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.2", "1.3");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack77);

        $stack78 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.2", "1.4");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack78);

        $stack79 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.2", "1.5");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack79);

        $stack80 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.2", "1.6");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack80);

        $stack81 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.4.2", "1.7");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack81);

        $stack82 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.5.0", "1.0");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack82);

        $stack83 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.5.0", "1.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack83);

        $stack84 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.5.0", "1.2");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack84);

        $stack85 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.5.0", "1.3");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack85);

        $stack86 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.5.0", "1.4");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack86);

        $stack87 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.5.0", "1.5");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack87);

        $stack88 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.5.0", "1.6");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack88);

        $stack89 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.5.0", "1.7");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack89);

        $stack90 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.6.0", "1.0");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack90);

        $stack91 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.6.0", "1.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack91);

        $stack92 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.6.0", "1.2");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack92);

        $stack93 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.6.0", "1.3");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack93);

        $stack94 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.6.0", "1.4");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack94);

        $stack95 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.6.0", "1.5");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack95);

        $stack96 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.6.0", "1.6");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack96);

        $stack97 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.6.0", "1.7");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack97);

        $stack98 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.7.0", "1.0");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack98);

        $stack99 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.7.0", "1.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack99);

        $stack100 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.7.0", "1.2");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack100);

        $stack101 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.7.0", "1.3");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack101);

        $stack102 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.7.0", "1.4");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack102);

        $stack103 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.7.0", "1.5");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack103);

        $stack104 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.7.0", "1.6");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack104);

        $stack105 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>("1.7.0", "1.7");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack105);

        return;
    }

    public void testOSMatchesName()
    {
        org.apache.commons.lang3.SystemUtilsTest this;
        boolean $stack2, $stack3, $stack4, $stack5, $stack6;

        this := @this: org.apache.commons.lang3.SystemUtilsTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSNameMatch(java.lang.String,java.lang.String)>(null, "Windows");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack2);

        $stack3 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSNameMatch(java.lang.String,java.lang.String)>("", "Windows");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack3);

        $stack4 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSNameMatch(java.lang.String,java.lang.String)>("Windows 95", "Windows");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack4);

        $stack5 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSNameMatch(java.lang.String,java.lang.String)>("Windows NT", "Windows");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack5);

        $stack6 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSNameMatch(java.lang.String,java.lang.String)>("OS/2", "Windows");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack6);

        return;
    }

    public void testOSMatchesNameAndVersion()
    {
        org.apache.commons.lang3.SystemUtilsTest this;
        boolean $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9;

        this := @this: org.apache.commons.lang3.SystemUtilsTest;

        $stack3 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, null, "Windows 9", "4.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack3);

        $stack4 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("", "", "Windows 9", "4.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack4);

        $stack5 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("Windows 95", "4.0", "Windows 9", "4.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack5);

        $stack6 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("Windows 95", "4.1", "Windows 9", "4.1");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack6);

        $stack7 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("Windows 98", "4.1", "Windows 9", "4.1");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack7);

        $stack8 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("Windows NT", "4.0", "Windows 9", "4.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack8);

        $stack9 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("OS/2", "4.0", "Windows 9", "4.1");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack9);

        return;
    }

    public void testJavaAwtHeadless()
    {
        org.apache.commons.lang3.SystemUtilsTest this;
        java.lang.Boolean $stack20, $stack22, $stack24;
        java.lang.String $stack7, $stack8, $stack9, $stack14, $stack19, $stack27;
        boolean $stack6, $stack12, $stack17, $stack21, $stack23;
        org.apache.commons.lang3.JavaVersion $stack5;
        java.lang.StringBuilder $stack10, $stack11, $stack13, $stack15, $stack16, $stack18;

        this := @this: org.apache.commons.lang3.SystemUtilsTest;

        $stack5 = <org.apache.commons.lang3.JavaVersion: org.apache.commons.lang3.JavaVersion JAVA_1_4>;

        $stack6 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion)>($stack5);

        $stack7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.awt.headless");

        $stack8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("java.awt.headless", "false");

        staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>($stack8);

        if $stack6 == 0 goto label2;

        $stack20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($stack7);

        $stack21 = virtualinvoke $stack20.<java.lang.Boolean: boolean booleanValue()>();

        if $stack7 == null goto label1;

        $stack27 = <org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_AWT_HEADLESS>;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack7, $stack27);

     label1:
        $stack22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack21);

        $stack23 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaAwtHeadless()>();

        $stack24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack23);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack22, $stack24);

        goto label3;

     label2:
        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($stack7);

        $stack9 = <org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_AWT_HEADLESS>;

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($stack9);

        $stack10 = new java.lang.StringBuilder;

        specialinvoke $stack10.<java.lang.StringBuilder: void <init>()>();

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $stack12 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaAwtHeadless()>();

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack8, $stack14);

     label3:
        $stack15 = new java.lang.StringBuilder;

        specialinvoke $stack15.<java.lang.StringBuilder: void <init>()>();

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $stack17 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaAwtHeadless()>();

        $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack17);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack8, $stack19);

        return;
    }
}
