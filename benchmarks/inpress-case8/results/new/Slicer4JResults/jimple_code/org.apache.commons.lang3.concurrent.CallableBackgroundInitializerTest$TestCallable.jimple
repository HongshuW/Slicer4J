class org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable extends java.lang.Object implements java.util.concurrent.Callable
{
    int callCount;

    private void <init>()
    {
        org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable this;

        this := @this: org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Integer call() throws java.lang.Exception
    {
        org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable this;
        int $stack1, $stack2;
        java.lang.Integer $stack3;

        this := @this: org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable;

        $stack1 = this.<org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable: int callCount>;

        $stack2 = $stack1 + 1;

        this.<org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable: int callCount> = $stack2;

        $stack3 = staticinvoke <org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest: java.lang.Integer access$100()>();

        return $stack3;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable this;
        java.lang.Integer $stack1;

        this := @this: org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable;

        $stack1 = virtualinvoke this.<org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable: java.lang.Integer call()>();

        return $stack1;
    }

    void <init>(org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$1)
    {
        org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable this;
        org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$1 x0;

        this := @this: org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable;

        x0 := @parameter0: org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$1;

        specialinvoke this.<org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest$TestCallable: void <init>()>();

        return;
    }
}
