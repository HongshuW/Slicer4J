class org.apache.commons.lang3.concurrent.LazyInitializerTest$LazyInitializerTestImpl extends org.apache.commons.lang3.concurrent.LazyInitializer
{

    private void <init>()
    {
        org.apache.commons.lang3.concurrent.LazyInitializerTest$LazyInitializerTestImpl this;

        this := @this: org.apache.commons.lang3.concurrent.LazyInitializerTest$LazyInitializerTestImpl;

        specialinvoke this.<org.apache.commons.lang3.concurrent.LazyInitializer: void <init>()>();

        return;
    }

    protected java.lang.Object initialize()
    {
        org.apache.commons.lang3.concurrent.LazyInitializerTest$LazyInitializerTestImpl this;
        java.lang.Object $stack1;

        this := @this: org.apache.commons.lang3.concurrent.LazyInitializerTest$LazyInitializerTestImpl;

        $stack1 = new java.lang.Object;

        specialinvoke $stack1.<java.lang.Object: void <init>()>();

        return $stack1;
    }

    void <init>(org.apache.commons.lang3.concurrent.LazyInitializerTest$1)
    {
        org.apache.commons.lang3.concurrent.LazyInitializerTest$LazyInitializerTestImpl this;
        org.apache.commons.lang3.concurrent.LazyInitializerTest$1 x0;

        this := @this: org.apache.commons.lang3.concurrent.LazyInitializerTest$LazyInitializerTestImpl;

        x0 := @parameter0: org.apache.commons.lang3.concurrent.LazyInitializerTest$1;

        specialinvoke this.<org.apache.commons.lang3.concurrent.LazyInitializerTest$LazyInitializerTestImpl: void <init>()>();

        return;
    }
}
