final class org.apache.commons.lang3.ObjectUtilsTest$CloneableString extends org.apache.commons.lang3.mutable.MutableObject implements java.lang.Cloneable
{
    private static final long serialVersionUID;

    void <init>(java.lang.String)
    {
        java.lang.String s;
        org.apache.commons.lang3.ObjectUtilsTest$CloneableString this;

        this := @this: org.apache.commons.lang3.ObjectUtilsTest$CloneableString;

        s := @parameter0: java.lang.String;

        specialinvoke this.<org.apache.commons.lang3.mutable.MutableObject: void <init>(java.lang.Object)>(s);

        return;
    }

    public org.apache.commons.lang3.ObjectUtilsTest$CloneableString clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Object $stack1;
        org.apache.commons.lang3.ObjectUtilsTest$CloneableString this, $stack2;

        this := @this: org.apache.commons.lang3.ObjectUtilsTest$CloneableString;

        $stack1 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        $stack2 = (org.apache.commons.lang3.ObjectUtilsTest$CloneableString) $stack1;

        return $stack2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.commons.lang3.ObjectUtilsTest$CloneableString this, $stack1;

        this := @this: org.apache.commons.lang3.ObjectUtilsTest$CloneableString;

        $stack1 = virtualinvoke this.<org.apache.commons.lang3.ObjectUtilsTest$CloneableString: org.apache.commons.lang3.ObjectUtilsTest$CloneableString clone()>();

        return $stack1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.lang3.ObjectUtilsTest$CloneableString: long serialVersionUID> = 1L;

        return;
    }
}
