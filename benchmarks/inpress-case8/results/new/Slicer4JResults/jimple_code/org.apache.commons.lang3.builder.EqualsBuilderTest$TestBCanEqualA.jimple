public class org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA extends java.lang.Object
{
    private int b;

    public void <init>(int)
    {
        org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA this;
        int b;

        this := @this: org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA;

        b := @parameter0: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA: int b> = b;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA this, $stack4;
        org.apache.commons.lang3.builder.EqualsBuilderTest$TestACanEqualB $stack8;
        int $stack5, $stack6, $stack9, $stack10;
        java.lang.Object o;
        boolean $stack2, $stack3, $stack11, $stack7;

        this := @this: org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA;

        o := @parameter0: java.lang.Object;

        if o != this goto label1;

        return 1;

     label1:
        $stack2 = o instanceof org.apache.commons.lang3.builder.EqualsBuilderTest$TestACanEqualB;

        if $stack2 == 0 goto label4;

        $stack9 = this.<org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA: int b>;

        $stack8 = (org.apache.commons.lang3.builder.EqualsBuilderTest$TestACanEqualB) o;

        $stack10 = virtualinvoke $stack8.<org.apache.commons.lang3.builder.EqualsBuilderTest$TestACanEqualB: int getA()>();

        if $stack9 != $stack10 goto label2;

        $stack11 = 1;

        goto label3;

     label2:
        $stack11 = 0;

     label3:
        return $stack11;

     label4:
        $stack3 = o instanceof org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA;

        if $stack3 == 0 goto label7;

        $stack5 = this.<org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA: int b>;

        $stack4 = (org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA) o;

        $stack6 = virtualinvoke $stack4.<org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA: int getB()>();

        if $stack5 != $stack6 goto label5;

        $stack7 = 1;

        goto label6;

     label5:
        $stack7 = 0;

     label6:
        return $stack7;

     label7:
        return 0;
    }

    public int hashCode()
    {
        org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA this;
        int $stack1;

        this := @this: org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA;

        $stack1 = this.<org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA: int b>;

        return $stack1;
    }

    public int getB()
    {
        org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA this;
        int $stack1;

        this := @this: org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA;

        $stack1 = this.<org.apache.commons.lang3.builder.EqualsBuilderTest$TestBCanEqualA: int b>;

        return $stack1;
    }
}
