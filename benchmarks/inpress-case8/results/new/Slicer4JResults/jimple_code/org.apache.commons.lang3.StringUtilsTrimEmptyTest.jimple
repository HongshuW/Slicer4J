public class org.apache.commons.lang3.StringUtilsTrimEmptyTest extends java.lang.Object
{
    private static final java.lang.String FOO;

    public void <init>()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testIsEmpty()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        boolean $stack1, $stack2, $stack3, $stack4, $stack5;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(null);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack1);

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>("");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack2);

        $stack3 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(" ");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack3);

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>("foo");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack4);

        $stack5 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>("  foo  ");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack5);

        return;
    }

    public void testIsNotEmpty()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        boolean $stack1, $stack2, $stack3, $stack4, $stack5;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isNotEmpty(java.lang.CharSequence)>(null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack1);

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isNotEmpty(java.lang.CharSequence)>("");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack2);

        $stack3 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isNotEmpty(java.lang.CharSequence)>(" ");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack3);

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isNotEmpty(java.lang.CharSequence)>("foo");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack4);

        $stack5 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isNotEmpty(java.lang.CharSequence)>("  foo  ");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack5);

        return;
    }

    public void testIsBlank()
    {
        java.lang.String $stack3;
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        boolean $stack1, $stack2, $stack4, $stack5, $stack6;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(null);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack1);

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>("");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack2);

        $stack3 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>($stack3);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack4);

        $stack5 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>("foo");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack5);

        $stack6 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>("  foo  ");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack6);

        return;
    }

    public void testIsNotBlank()
    {
        java.lang.String $stack3;
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        boolean $stack1, $stack2, $stack4, $stack5, $stack6;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>(null);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack1);

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>("");

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack2);

        $stack3 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>($stack3);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack4);

        $stack5 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>("foo");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack5);

        $stack6 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isNotBlank(java.lang.CharSequence)>("  foo  ");

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack6);

        return;
    }

    public void testTrim()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        java.lang.String $stack2, $stack4, $stack6, $stack8, $stack10, $stack11, $stack13, $stack14, $stack15, $stack16, $stack18, $stack20;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trim(java.lang.String)>("foo  ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $stack2);

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trim(java.lang.String)>(" foo  ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $stack4);

        $stack6 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trim(java.lang.String)>(" foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $stack6);

        $stack8 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trim(java.lang.String)>("foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $stack8);

        $stack10 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trim(java.lang.String)>(" \t\r\n\u0008 ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack10);

        $stack11 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String TRIMMABLE>;

        $stack13 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trim(java.lang.String)>($stack11);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack13);

        $stack15 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_TRIMMABLE>;

        $stack14 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_TRIMMABLE>;

        $stack16 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trim(java.lang.String)>($stack14);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack15, $stack16);

        $stack18 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trim(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack18);

        $stack20 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trim(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack20);

        return;
    }

    public void testTrimToNull()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        java.lang.String $stack2, $stack4, $stack6, $stack8, $stack10, $stack11, $stack13, $stack14, $stack15, $stack16, $stack18, $stack20;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToNull(java.lang.String)>("foo  ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $stack2);

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToNull(java.lang.String)>(" foo  ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $stack4);

        $stack6 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToNull(java.lang.String)>(" foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $stack6);

        $stack8 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToNull(java.lang.String)>("foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $stack8);

        $stack10 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToNull(java.lang.String)>(" \t\r\n\u0008 ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack10);

        $stack11 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String TRIMMABLE>;

        $stack13 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToNull(java.lang.String)>($stack11);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack13);

        $stack15 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_TRIMMABLE>;

        $stack14 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_TRIMMABLE>;

        $stack16 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToNull(java.lang.String)>($stack14);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack15, $stack16);

        $stack18 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToNull(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack18);

        $stack20 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToNull(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack20);

        return;
    }

    public void testTrimToEmpty()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        java.lang.String $stack2, $stack4, $stack6, $stack8, $stack10, $stack11, $stack13, $stack14, $stack15, $stack16, $stack18, $stack20;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToEmpty(java.lang.String)>("foo  ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $stack2);

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToEmpty(java.lang.String)>(" foo  ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $stack4);

        $stack6 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToEmpty(java.lang.String)>(" foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $stack6);

        $stack8 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToEmpty(java.lang.String)>("foo");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("foo", $stack8);

        $stack10 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToEmpty(java.lang.String)>(" \t\r\n\u0008 ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack10);

        $stack11 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String TRIMMABLE>;

        $stack13 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToEmpty(java.lang.String)>($stack11);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack13);

        $stack15 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_TRIMMABLE>;

        $stack14 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_TRIMMABLE>;

        $stack16 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToEmpty(java.lang.String)>($stack14);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack15, $stack16);

        $stack18 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToEmpty(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack18);

        $stack20 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String trimToEmpty(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack20);

        return;
    }

    public void testStrip_String()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        java.lang.StringBuilder $stack9, $stack12, $stack14, $stack16;
        java.lang.String $stack2, $stack4, $stack6, $stack8, $stack10, $stack11, $stack13, $stack15, $stack17, $stack18;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack2);

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack4);

        $stack6 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String)>("        ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack6);

        $stack8 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String)>("  abc  ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("abc", $stack8);

        $stack10 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_WHITESPACE>;

        $stack9 = new java.lang.StringBuilder;

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>();

        $stack11 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        $stack13 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_WHITESPACE>;

        $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13);

        $stack15 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack18 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String)>($stack17);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack10, $stack18);

        return;
    }

    public void testStripToNull_String()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        java.lang.String $stack2, $stack4, $stack6, $stack7, $stack9, $stack11, $stack13, $stack14, $stack16, $stack18, $stack20, $stack21;
        java.lang.StringBuilder $stack12, $stack15, $stack17, $stack19;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripToNull(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack2);

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripToNull(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack4);

        $stack6 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripToNull(java.lang.String)>("        ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack6);

        $stack7 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack9 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripToNull(java.lang.String)>($stack7);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack9);

        $stack11 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripToNull(java.lang.String)>("  ab c  ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("ab c", $stack11);

        $stack13 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_WHITESPACE>;

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        $stack14 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack15 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_WHITESPACE>;

        $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        $stack18 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack21 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripToNull(java.lang.String)>($stack20);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack13, $stack21);

        return;
    }

    public void testStripToEmpty_String()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        java.lang.String $stack2, $stack4, $stack6, $stack7, $stack9, $stack11, $stack13, $stack14, $stack16, $stack18, $stack20, $stack21;
        java.lang.StringBuilder $stack12, $stack15, $stack17, $stack19;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripToEmpty(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack2);

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripToEmpty(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack4);

        $stack6 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripToEmpty(java.lang.String)>("        ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack6);

        $stack7 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack9 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripToEmpty(java.lang.String)>($stack7);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack9);

        $stack11 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripToEmpty(java.lang.String)>("  ab c  ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("ab c", $stack11);

        $stack13 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_WHITESPACE>;

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        $stack14 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack15 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_WHITESPACE>;

        $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        $stack18 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack21 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripToEmpty(java.lang.String)>($stack20);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack13, $stack21);

        return;
    }

    public void testStrip_StringString()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        java.lang.StringBuilder $stack9, $stack12, $stack14, $stack16;
        java.lang.String $stack2, $stack4, $stack6, $stack8, $stack10, $stack11, $stack13, $stack15, $stack17, $stack18, $stack20, $stack22, $stack24, $stack26, $stack27, $stack28, $stack29, $stack31, $stack33, $stack35, $stack37, $stack39, $stack41, $stack43, $stack45, $stack47, $stack48, $stack49, $stack50;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>(null, null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack2);

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("", null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack4);

        $stack6 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("        ", null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack6);

        $stack8 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("  abc  ", null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("abc", $stack8);

        $stack10 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_WHITESPACE>;

        $stack9 = new java.lang.StringBuilder;

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>();

        $stack11 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        $stack13 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_WHITESPACE>;

        $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13);

        $stack15 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack18 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>($stack17, null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack10, $stack18);

        $stack20 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>(null, "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack20);

        $stack22 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack22);

        $stack24 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("        ", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("        ", $stack24);

        $stack26 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("  abc  ", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("  abc  ", $stack26);

        $stack28 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack27 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack29 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>($stack27, "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack28, $stack29);

        $stack31 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>(null, " ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack31);

        $stack33 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("", " ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack33);

        $stack35 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("        ", " ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack35);

        $stack37 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("  abc  ", " ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("abc", $stack37);

        $stack39 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>(null, "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack39);

        $stack41 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("", "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack41);

        $stack43 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("        ", "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("        ", $stack43);

        $stack45 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("  abc  ", "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("  abc  ", $stack45);

        $stack47 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>("abcabab", "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("c", $stack47);

        $stack49 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack48 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack50 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>($stack48, "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack49, $stack50);

        return;
    }

    public void testStripStart_StringString()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        java.lang.StringBuilder $stack9, $stack11, $stack13, $stack15, $stack17, $stack19, $stack21;
        java.lang.String $stack2, $stack4, $stack6, $stack8, $stack10, $stack12, $stack14, $stack16, $stack18, $stack20, $stack22, $stack23, $stack25, $stack27, $stack29, $stack31, $stack32, $stack33, $stack34, $stack36, $stack38, $stack40, $stack42, $stack44, $stack46, $stack48, $stack50, $stack52, $stack53, $stack54, $stack55;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>(null, null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack2);

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("", null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack4);

        $stack6 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("        ", null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack6);

        $stack8 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("  abc  ", null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("abc  ", $stack8);

        $stack9 = new java.lang.StringBuilder;

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>();

        $stack10 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_WHITESPACE>;

        $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

        $stack12 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack15 = new java.lang.StringBuilder;

        specialinvoke $stack15.<java.lang.StringBuilder: void <init>()>();

        $stack16 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        $stack18 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_WHITESPACE>;

        $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        $stack20 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack23 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>($stack22, null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack14, $stack23);

        $stack25 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>(null, "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack25);

        $stack27 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack27);

        $stack29 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("        ", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("        ", $stack29);

        $stack31 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("  abc  ", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("  abc  ", $stack31);

        $stack33 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack32 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack34 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>($stack32, "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack33, $stack34);

        $stack36 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>(null, " ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack36);

        $stack38 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("", " ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack38);

        $stack40 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("        ", " ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack40);

        $stack42 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("  abc  ", " ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("abc  ", $stack42);

        $stack44 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>(null, "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack44);

        $stack46 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("", "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack46);

        $stack48 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("        ", "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("        ", $stack48);

        $stack50 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("  abc  ", "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("  abc  ", $stack50);

        $stack52 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>("abcabab", "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("cabab", $stack52);

        $stack54 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack53 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack55 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)>($stack53, "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack54, $stack55);

        return;
    }

    public void testStripEnd_StringString()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        java.lang.StringBuilder $stack9, $stack11, $stack13, $stack15, $stack17, $stack19, $stack21;
        java.lang.String $stack2, $stack4, $stack6, $stack8, $stack10, $stack12, $stack14, $stack16, $stack18, $stack20, $stack22, $stack23, $stack25, $stack27, $stack29, $stack31, $stack32, $stack33, $stack34, $stack36, $stack38, $stack40, $stack42, $stack44, $stack46, $stack48, $stack50, $stack52, $stack53, $stack54, $stack55;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack2 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>(null, null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack2);

        $stack4 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("", null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack4);

        $stack6 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("        ", null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack6);

        $stack8 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("  abc  ", null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("  abc", $stack8);

        $stack9 = new java.lang.StringBuilder;

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>();

        $stack10 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

        $stack12 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_WHITESPACE>;

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack15 = new java.lang.StringBuilder;

        specialinvoke $stack15.<java.lang.StringBuilder: void <init>()>();

        $stack16 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        $stack18 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String NON_WHITESPACE>;

        $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        $stack20 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack23 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>($stack22, null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack14, $stack23);

        $stack25 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>(null, "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack25);

        $stack27 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack27);

        $stack29 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("        ", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("        ", $stack29);

        $stack31 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("  abc  ", "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("  abc  ", $stack31);

        $stack33 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack32 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack34 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>($stack32, "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack33, $stack34);

        $stack36 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>(null, " ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack36);

        $stack38 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("", " ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack38);

        $stack40 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("        ", " ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack40);

        $stack42 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("  abc  ", " ");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("  abc", $stack42);

        $stack44 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>(null, "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack44);

        $stack46 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("", "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("", $stack46);

        $stack48 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("        ", "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("        ", $stack48);

        $stack50 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("  abc  ", "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("  abc  ", $stack50);

        $stack52 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>("abcabab", "ab");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("abc", $stack52);

        $stack54 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack53 = <org.apache.commons.lang3.StringUtilsTest: java.lang.String WHITESPACE>;

        $stack55 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)>($stack53, "");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($stack54, $stack55);

        return;
    }

    public void testStripAll()
    {
        java.lang.String[] empty, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20;
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        empty = newarray (java.lang.String)[0];

        $stack5 = newarray (java.lang.String)[3];

        $stack5[0] = "  foo  ";

        $stack5[1] = "  foo";

        $stack5[2] = "foo  ";

        $stack6 = newarray (java.lang.String)[3];

        $stack6[0] = "..foo..";

        $stack6[1] = "..foo";

        $stack6[2] = "foo..";

        $stack7 = newarray (java.lang.String)[3];

        $stack7[0] = "foo";

        $stack7[1] = "foo";

        $stack7[2] = "foo";

        $stack8 = (java.lang.String[]) null;

        $stack9 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String[] stripAll(java.lang.String[])>($stack8);

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($stack9);

        $stack10 = newarray (java.lang.String)[0];

        $stack11 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String[] stripAll(java.lang.String[])>($stack10);

        staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>(empty, $stack11);

        $stack12 = newarray (java.lang.String)[1];

        $stack12[0] = null;

        $stack13 = newarray (java.lang.String)[1];

        $stack13[0] = null;

        $stack15 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String[] stripAll(java.lang.String[])>($stack13);

        staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>($stack12, $stack15);

        $stack16 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String[] stripAll(java.lang.String[])>(empty);

        staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>(empty, $stack16);

        $stack17 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String[] stripAll(java.lang.String[])>($stack5);

        staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>($stack7, $stack17);

        $stack18 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String[] stripAll(java.lang.String[],java.lang.String)>(null, null);

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($stack18);

        $stack19 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String[] stripAll(java.lang.String[],java.lang.String)>($stack5, null);

        staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>($stack7, $stack19);

        $stack20 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String[] stripAll(java.lang.String[],java.lang.String)>($stack6, ".");

        staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>($stack7, $stack20);

        return;
    }

    public void testStripAccents()
    {
        org.apache.commons.lang3.StringUtilsTrimEmptyTest this;
        java.lang.StringBuilder $stack3, $stack4, $stack5, $stack9, $stack10, $stack11;
        java.lang.String $stack6, $stack8, $stack12, $stack14, $stack16, $stack19, $stack22, $stack25;

        this := @this: org.apache.commons.lang3.StringUtilsTrimEmptyTest;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to strip accents from ");

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u00c7\u00fa\u00ea");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack8 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripAccents(java.lang.String)>("\u00c7\u00fa\u00ea");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($stack6, "Cue", $stack8);

        $stack9 = new java.lang.StringBuilder;

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to strip accents from ");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u00c0\u00c1\u00c2\u00c3\u00c4\u00c5\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d1\u00d2\u00d3\u00d4\u00d5\u00d6\u00d9\u00da\u00db\u00dc\u00dd");

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack14 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripAccents(java.lang.String)>("\u00c0\u00c1\u00c2\u00c3\u00c4\u00c5\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d1\u00d2\u00d3\u00d4\u00d5\u00d6\u00d9\u00da\u00db\u00dc\u00dd");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($stack12, "AAAAAACEEEEIIIINOOOOOUUUUY", $stack14);

        $stack16 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripAccents(java.lang.String)>(null);

        staticinvoke <org.junit.Assert: void assertNull(java.lang.String,java.lang.Object)>("Failed null safety", $stack16);

        $stack19 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripAccents(java.lang.String)>("");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Failed empty String", "", $stack19);

        $stack22 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripAccents(java.lang.String)>("control");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to handle non-accented text", "control", $stack22);

        $stack25 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String stripAccents(java.lang.String)>("\u00e9clair");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to handle easy example", "eclair", $stack25);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.lang3.StringUtilsTrimEmptyTest: java.lang.String FOO> = "foo";

        return;
    }
}
