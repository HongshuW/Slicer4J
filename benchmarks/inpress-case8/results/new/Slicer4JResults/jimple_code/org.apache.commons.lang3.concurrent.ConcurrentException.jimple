public class org.apache.commons.lang3.concurrent.ConcurrentException extends java.lang.Exception
{
    private static final long serialVersionUID;

    protected void <init>()
    {
        org.apache.commons.lang3.concurrent.ConcurrentException this;

        this := @this: org.apache.commons.lang3.concurrent.ConcurrentException;

        specialinvoke this.<java.lang.Exception: void <init>()>();

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        java.lang.Throwable cause, $stack2;
        org.apache.commons.lang3.concurrent.ConcurrentException this;

        this := @this: org.apache.commons.lang3.concurrent.ConcurrentException;

        cause := @parameter0: java.lang.Throwable;

        $stack2 = staticinvoke <org.apache.commons.lang3.concurrent.ConcurrentUtils: java.lang.Throwable checkedException(java.lang.Throwable)>(cause);

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.Throwable)>($stack2);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable cause, $stack3;
        org.apache.commons.lang3.concurrent.ConcurrentException this;
        java.lang.String msg;

        this := @this: org.apache.commons.lang3.concurrent.ConcurrentException;

        msg := @parameter0: java.lang.String;

        cause := @parameter1: java.lang.Throwable;

        $stack3 = staticinvoke <org.apache.commons.lang3.concurrent.ConcurrentUtils: java.lang.Throwable checkedException(java.lang.Throwable)>(cause);

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(msg, $stack3);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.lang3.concurrent.ConcurrentException: long serialVersionUID> = 6622707671812226130L;

        return;
    }
}
