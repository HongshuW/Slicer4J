public class org.apache.commons.lang3.text.translate.NumericEntityUnescaper extends org.apache.commons.lang3.text.translate.CharSequenceTranslator
{
    private final java.util.EnumSet options;

    public transient void <init>(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[])
    {
        org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] options, $stack3;
        org.apache.commons.lang3.text.translate.NumericEntityUnescaper this;
        org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION $stack4;
        java.util.List $stack5, $stack7;
        int $stack2;
        java.util.EnumSet $stack6, $stack8;

        this := @this: org.apache.commons.lang3.text.translate.NumericEntityUnescaper;

        options := @parameter0: org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[];

        specialinvoke this.<org.apache.commons.lang3.text.translate.CharSequenceTranslator: void <init>()>();

        $stack2 = lengthof options;

        if $stack2 <= 0 goto label1;

        $stack7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(options);

        $stack8 = staticinvoke <java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>($stack7);

        this.<org.apache.commons.lang3.text.translate.NumericEntityUnescaper: java.util.EnumSet options> = $stack8;

        goto label2;

     label1:
        $stack3 = newarray (org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)[1];

        $stack4 = <org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION: org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonRequired>;

        $stack3[0] = $stack4;

        $stack5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack3);

        $stack6 = staticinvoke <java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>($stack5);

        this.<org.apache.commons.lang3.text.translate.NumericEntityUnescaper: java.util.EnumSet options> = $stack6;

     label2:
        return;
    }

    public boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)
    {
        org.apache.commons.lang3.text.translate.NumericEntityUnescaper this;
        org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION option;
        java.util.EnumSet $stack2, $stack3;
        boolean $stack4;

        this := @this: org.apache.commons.lang3.text.translate.NumericEntityUnescaper;

        option := @parameter0: org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION;

        $stack2 = this.<org.apache.commons.lang3.text.translate.NumericEntityUnescaper: java.util.EnumSet options>;

        if $stack2 != null goto label1;

        $stack4 = 0;

        goto label2;

     label1:
        $stack3 = this.<org.apache.commons.lang3.text.translate.NumericEntityUnescaper: java.util.EnumSet options>;

        $stack4 = virtualinvoke $stack3.<java.util.EnumSet: boolean contains(java.lang.Object)>(option);

     label2:
        return $stack4;
    }

    public int translate(java.lang.CharSequence, int, java.io.Writer) throws java.io.IOException
    {
        boolean semiNext, $stack40, $stack42, isHex, $stack46, $stack27, $stack26, $stack46#12_2, isHex#2_4;
        java.lang.CharSequence input, $stack19, $stack36;
        java.io.Writer out;
        int $stack12, index, $stack14, $stack16, $stack22, $stack23, $stack24, $stack25, start, end, entityValue, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String $stack20, $stack37;
        char $stack13, $stack17, $stack18, $stack30, $stack31, $stack45, $stack48, $stack49, $stack50, $stack53, $stack56, $stack60;
        java.lang.NumberFormatException $stack68;
        java.lang.IllegalArgumentException $u0;
        org.apache.commons.lang3.text.translate.NumericEntityUnescaper this;
        org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION $stack39, $stack41;
        char[] $stack29;

        this := @this: org.apache.commons.lang3.text.translate.NumericEntityUnescaper;

        input := @parameter0: java.lang.CharSequence;

        index := @parameter1: int;

        out := @parameter2: java.io.Writer;

        $stack12 = interfaceinvoke input.<java.lang.CharSequence: int length()>();

        $stack13 = interfaceinvoke input.<java.lang.CharSequence: char charAt(int)>(index);

        $i0 = (int) $stack13;

        if $i0 != 38 goto label22;

        $stack14 = $stack12 - 2;

        if index >= $stack14 goto label22;

        $stack16 = index + 1;

        $stack17 = interfaceinvoke input.<java.lang.CharSequence: char charAt(int)>($stack16);

        $i1 = (int) $stack17;

        if $i1 != 35 goto label22;

        start = index + 2;

        isHex = 0;

        isHex#2_4 = 0;

        isHex = 0;

        $stack18 = interfaceinvoke input.<java.lang.CharSequence: char charAt(int)>(start);

        $i2 = (int) $stack18;

        if $i2 == 120 goto label01;

        $i3 = (int) $stack18;

        if $i3 != 88 goto label02;

     label01:
        start = start + 1;

        isHex = 1;

        isHex#2_4 = 1;

        isHex = 1;

        if start != $stack12 goto label02;

        return 0;

     label02:
        end = start;

     label03:
        if end >= $stack12 goto label07;

        $stack48 = interfaceinvoke input.<java.lang.CharSequence: char charAt(int)>(end);

        $i4 = (int) $stack48;

        if $i4 < 48 goto label04;

        $stack60 = interfaceinvoke input.<java.lang.CharSequence: char charAt(int)>(end);

        $i5 = (int) $stack60;

        if $i5 <= 57 goto label06;

     label04:
        $stack49 = interfaceinvoke input.<java.lang.CharSequence: char charAt(int)>(end);

        $i6 = (int) $stack49;

        if $i6 < 97 goto label05;

        $stack56 = interfaceinvoke input.<java.lang.CharSequence: char charAt(int)>(end);

        $i7 = (int) $stack56;

        if $i7 <= 102 goto label06;

     label05:
        $stack50 = interfaceinvoke input.<java.lang.CharSequence: char charAt(int)>(end);

        $i8 = (int) $stack50;

        if $i8 < 65 goto label07;

        $stack53 = interfaceinvoke input.<java.lang.CharSequence: char charAt(int)>(end);

        $i9 = (int) $stack53;

        if $i9 > 70 goto label07;

     label06:
        end = end + 1;

        goto label03;

     label07:
        if end == $stack12 goto label08;

        $stack45 = interfaceinvoke input.<java.lang.CharSequence: char charAt(int)>(end);

        $i10 = (int) $stack45;

        if $i10 != 59 goto label08;

        $stack46#12_2 = 1;

        $stack46 = 1;

        goto label09;

     label08:
        $stack46#12_2 = 0;

        $stack46 = 0;

     label09:
        semiNext = $stack46;

        if $stack46#12_2 != 0 goto label11;

        $stack39 = <org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION: org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonRequired>;

        $stack40 = virtualinvoke this.<org.apache.commons.lang3.text.translate.NumericEntityUnescaper: boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)>($stack39);

        if $stack40 == 0 goto label10;

        return 0;

     label10:
        $stack41 = <org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION: org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION errorIfNoSemiColon>;

        $stack42 = virtualinvoke this.<org.apache.commons.lang3.text.translate.NumericEntityUnescaper: boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)>($stack41);

        if $stack42 == 0 goto label11;

        $u0 = new java.lang.IllegalArgumentException;

        specialinvoke $u0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Semi-colon required at end of numeric entity");

        throw $u0;

     label11:
        if isHex#2_4 == 0 goto label12;

        $stack36 = interfaceinvoke input.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(start, end);

        $stack37 = interfaceinvoke $stack36.<java.lang.CharSequence: java.lang.String toString()>();

        entityValue = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($stack37, 16);

        goto label13;

     label12:
        $stack19 = interfaceinvoke input.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(start, end);

        $stack20 = interfaceinvoke $stack19.<java.lang.CharSequence: java.lang.String toString()>();

        entityValue = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($stack20, 10);

     label13:
        goto label15;

     label14:
        $stack68 := @caughtexception;

        return 0;

     label15:
        $i11 = (int) 65535;

        if entityValue <= $i11 goto label16;

        $stack29 = staticinvoke <java.lang.Character: char[] toChars(int)>(entityValue);

        $stack30 = $stack29[0];

        $i12 = (int) $stack30;

        virtualinvoke out.<java.io.Writer: void write(int)>($i12);

        $stack31 = $stack29[1];

        $i13 = (int) $stack31;

        virtualinvoke out.<java.io.Writer: void write(int)>($i13);

        goto label17;

     label16:
        virtualinvoke out.<java.io.Writer: void write(int)>(entityValue);

     label17:
        $stack22 = 2 + end;

        $stack23 = $stack22 - start;

        if isHex == 0 goto label18;

        $stack27 = 1;

        goto label19;

     label18:
        $stack27 = 0;

     label19:
        $stack24 = $stack23 + $stack27;

        if semiNext == 0 goto label20;

        $stack26 = 1;

        goto label21;

     label20:
        $stack26 = 0;

     label21:
        $stack25 = $stack24 + $stack26;

        return $stack25;

     label22:
        return 0;

        catch java.lang.NumberFormatException from label11 to label13 with label14;
    }
}
