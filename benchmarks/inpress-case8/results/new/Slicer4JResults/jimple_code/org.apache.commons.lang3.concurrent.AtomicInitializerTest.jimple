public class org.apache.commons.lang3.concurrent.AtomicInitializerTest extends org.apache.commons.lang3.concurrent.AbstractConcurrentInitializerTest
{

    public void <init>()
    {
        org.apache.commons.lang3.concurrent.AtomicInitializerTest this;

        this := @this: org.apache.commons.lang3.concurrent.AtomicInitializerTest;

        specialinvoke this.<org.apache.commons.lang3.concurrent.AbstractConcurrentInitializerTest: void <init>()>();

        return;
    }

    protected org.apache.commons.lang3.concurrent.ConcurrentInitializer createInitializer()
    {
        org.apache.commons.lang3.concurrent.AtomicInitializerTest this;
        org.apache.commons.lang3.concurrent.AtomicInitializerTest$1 $stack1;

        this := @this: org.apache.commons.lang3.concurrent.AtomicInitializerTest;

        $stack1 = new org.apache.commons.lang3.concurrent.AtomicInitializerTest$1;

        specialinvoke $stack1.<org.apache.commons.lang3.concurrent.AtomicInitializerTest$1: void <init>(org.apache.commons.lang3.concurrent.AtomicInitializerTest)>(this);

        return $stack1;
    }
}
