public class org.apache.commons.lang3.BitFieldTest extends java.lang.Object
{
    private static final org.apache.commons.lang3.BitField bf_multi;
    private static final org.apache.commons.lang3.BitField bf_single;
    private static final org.apache.commons.lang3.BitField bf_zero;

    public void <init>()
    {
        org.apache.commons.lang3.BitFieldTest this;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testGetValue()
    {
        long $stack3, $stack6, $stack9, $stack12, $stack15, $stack18;
        org.apache.commons.lang3.BitField $stack1, $stack4, $stack7, $stack10, $stack13, $stack16;
        int $stack2, $stack5, $stack8, $stack11, $stack14, $stack17, $i0, $i1, $i2;
        org.apache.commons.lang3.BitFieldTest this;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        $stack1 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $i0 = (int) -1;

        $stack2 = virtualinvoke $stack1.<org.apache.commons.lang3.BitField: int getValue(int)>($i0);

        $stack3 = (long) $stack2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack3, 127L);

        $stack4 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack5 = virtualinvoke $stack4.<org.apache.commons.lang3.BitField: int getValue(int)>(0);

        $stack6 = (long) $stack5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack6, 0L);

        $stack7 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $i1 = (int) -1;

        $stack8 = virtualinvoke $stack7.<org.apache.commons.lang3.BitField: int getValue(int)>($i1);

        $stack9 = (long) $stack8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack9, 1L);

        $stack10 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack11 = virtualinvoke $stack10.<org.apache.commons.lang3.BitField: int getValue(int)>(0);

        $stack12 = (long) $stack11;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack12, 0L);

        $stack13 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $i2 = (int) -1;

        $stack14 = virtualinvoke $stack13.<org.apache.commons.lang3.BitField: int getValue(int)>($i2);

        $stack15 = (long) $stack14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack15, 0L);

        $stack16 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack17 = virtualinvoke $stack16.<org.apache.commons.lang3.BitField: int getValue(int)>(0);

        $stack18 = (long) $stack17;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack18, 0L);

        return;
    }

    public void testGetShortValue()
    {
        long $stack3, $stack6, $stack9, $stack12, $stack15, $stack18;
        org.apache.commons.lang3.BitField $stack1, $stack4, $stack7, $stack10, $stack13, $stack16;
        short $stack2, $stack5, $stack8, $stack11, $stack14, $stack17, $s0, $s1, $s2;
        org.apache.commons.lang3.BitFieldTest this;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        $stack1 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $s0 = (short) -1;

        $stack2 = virtualinvoke $stack1.<org.apache.commons.lang3.BitField: short getShortValue(short)>($s0);

        $stack3 = (long) $stack2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack3, 127L);

        $stack4 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack5 = virtualinvoke $stack4.<org.apache.commons.lang3.BitField: short getShortValue(short)>(0);

        $stack6 = (long) $stack5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack6, 0L);

        $stack7 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $s1 = (short) -1;

        $stack8 = virtualinvoke $stack7.<org.apache.commons.lang3.BitField: short getShortValue(short)>($s1);

        $stack9 = (long) $stack8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack9, 1L);

        $stack10 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack11 = virtualinvoke $stack10.<org.apache.commons.lang3.BitField: short getShortValue(short)>(0);

        $stack12 = (long) $stack11;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack12, 0L);

        $stack13 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $s2 = (short) -1;

        $stack14 = virtualinvoke $stack13.<org.apache.commons.lang3.BitField: short getShortValue(short)>($s2);

        $stack15 = (long) $stack14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack15, 0L);

        $stack16 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack17 = virtualinvoke $stack16.<org.apache.commons.lang3.BitField: short getShortValue(short)>(0);

        $stack18 = (long) $stack17;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack18, 0L);

        return;
    }

    public void testGetRawValue()
    {
        long $stack3, $stack6, $stack9, $stack12, $stack15, $stack18;
        org.apache.commons.lang3.BitField $stack1, $stack4, $stack7, $stack10, $stack13, $stack16;
        int $stack2, $stack5, $stack8, $stack11, $stack14, $stack17, $i0, $i1, $i2;
        org.apache.commons.lang3.BitFieldTest this;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        $stack1 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $i0 = (int) -1;

        $stack2 = virtualinvoke $stack1.<org.apache.commons.lang3.BitField: int getRawValue(int)>($i0);

        $stack3 = (long) $stack2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack3, 16256L);

        $stack4 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack5 = virtualinvoke $stack4.<org.apache.commons.lang3.BitField: int getRawValue(int)>(0);

        $stack6 = (long) $stack5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack6, 0L);

        $stack7 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $i1 = (int) -1;

        $stack8 = virtualinvoke $stack7.<org.apache.commons.lang3.BitField: int getRawValue(int)>($i1);

        $stack9 = (long) $stack8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack9, 16384L);

        $stack10 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack11 = virtualinvoke $stack10.<org.apache.commons.lang3.BitField: int getRawValue(int)>(0);

        $stack12 = (long) $stack11;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack12, 0L);

        $stack13 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $i2 = (int) -1;

        $stack14 = virtualinvoke $stack13.<org.apache.commons.lang3.BitField: int getRawValue(int)>($i2);

        $stack15 = (long) $stack14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack15, 0L);

        $stack16 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack17 = virtualinvoke $stack16.<org.apache.commons.lang3.BitField: int getRawValue(int)>(0);

        $stack18 = (long) $stack17;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack18, 0L);

        return;
    }

    public void testGetShortRawValue()
    {
        long $stack3, $stack6, $stack9, $stack12, $stack15, $stack18;
        org.apache.commons.lang3.BitField $stack1, $stack4, $stack7, $stack10, $stack13, $stack16;
        short $stack2, $stack5, $stack8, $stack11, $stack14, $stack17, $s0, $s1, $s2;
        org.apache.commons.lang3.BitFieldTest this;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        $stack1 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $s0 = (short) -1;

        $stack2 = virtualinvoke $stack1.<org.apache.commons.lang3.BitField: short getShortRawValue(short)>($s0);

        $stack3 = (long) $stack2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack3, 16256L);

        $stack4 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack5 = virtualinvoke $stack4.<org.apache.commons.lang3.BitField: short getShortRawValue(short)>(0);

        $stack6 = (long) $stack5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack6, 0L);

        $stack7 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $s1 = (short) -1;

        $stack8 = virtualinvoke $stack7.<org.apache.commons.lang3.BitField: short getShortRawValue(short)>($s1);

        $stack9 = (long) $stack8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack9, 16384L);

        $stack10 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack11 = virtualinvoke $stack10.<org.apache.commons.lang3.BitField: short getShortRawValue(short)>(0);

        $stack12 = (long) $stack11;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack12, 0L);

        $stack13 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $s2 = (short) -1;

        $stack14 = virtualinvoke $stack13.<org.apache.commons.lang3.BitField: short getShortRawValue(short)>($s2);

        $stack15 = (long) $stack14;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack15, 0L);

        $stack16 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack17 = virtualinvoke $stack16.<org.apache.commons.lang3.BitField: short getShortRawValue(short)>(0);

        $stack18 = (long) $stack17;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack18, 0L);

        return;
    }

    public void testIsSet()
    {
        org.apache.commons.lang3.BitField $stack2, $stack4, $stack6, $stack8, $stack12, $stack17;
        int j;
        boolean $stack3, $stack5, $stack7, $stack9, $stack13, $stack18, $stack23, $stack21, $stack16, $stack10;
        org.apache.commons.lang3.BitFieldTest this;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        $stack2 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack3 = virtualinvoke $stack2.<org.apache.commons.lang3.BitField: boolean isSet(int)>(0);

        if $stack3 != 0 goto label01;

        $stack23 = 1;

        goto label02;

     label01:
        $stack23 = 0;

     label02:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack23);

        $stack4 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack5 = virtualinvoke $stack4.<org.apache.commons.lang3.BitField: boolean isSet(int)>(0);

        if $stack5 != 0 goto label03;

        $stack21 = 1;

        goto label04;

     label03:
        $stack21 = 0;

     label04:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack21);

        j = 128;

     label05:
        if j > 16256 goto label06;

        $stack17 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack18 = virtualinvoke $stack17.<org.apache.commons.lang3.BitField: boolean isSet(int)>(j);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack18);

        j = j + 128;

        goto label05;

     label06:
        j = 128;

     label07:
        if j > 16256 goto label10;

        $stack12 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack13 = virtualinvoke $stack12.<org.apache.commons.lang3.BitField: boolean isSet(int)>(j);

        if $stack13 != 0 goto label08;

        $stack16 = 1;

        goto label09;

     label08:
        $stack16 = 0;

     label09:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack16);

        j = j + 128;

        goto label07;

     label10:
        $stack6 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack7 = virtualinvoke $stack6.<org.apache.commons.lang3.BitField: boolean isSet(int)>(0);

        if $stack7 != 0 goto label11;

        $stack10 = 1;

        goto label12;

     label11:
        $stack10 = 0;

     label12:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack10);

        $stack8 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack9 = virtualinvoke $stack8.<org.apache.commons.lang3.BitField: boolean isSet(int)>(16384);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack9);

        return;
    }

    public void testIsAllSet()
    {
        org.apache.commons.lang3.BitFieldTest this;
        org.apache.commons.lang3.BitField $stack2, $stack4, $stack6, $stack10, $stack12;
        int j;
        boolean $stack3, $stack5, $stack7, $stack11, $stack13, $stack16, $stack8;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        j = 0;

     label1:
        if j >= 16256 goto label4;

        $stack10 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack11 = virtualinvoke $stack10.<org.apache.commons.lang3.BitField: boolean isAllSet(int)>(j);

        if $stack11 != 0 goto label2;

        $stack16 = 1;

        goto label3;

     label2:
        $stack16 = 0;

     label3:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack16);

        $stack12 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack13 = virtualinvoke $stack12.<org.apache.commons.lang3.BitField: boolean isAllSet(int)>(j);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack13);

        j = j + 128;

        goto label1;

     label4:
        $stack2 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack3 = virtualinvoke $stack2.<org.apache.commons.lang3.BitField: boolean isAllSet(int)>(16256);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack3);

        $stack4 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack5 = virtualinvoke $stack4.<org.apache.commons.lang3.BitField: boolean isAllSet(int)>(0);

        if $stack5 != 0 goto label5;

        $stack8 = 1;

        goto label6;

     label5:
        $stack8 = 0;

     label6:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack8);

        $stack6 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack7 = virtualinvoke $stack6.<org.apache.commons.lang3.BitField: boolean isAllSet(int)>(16384);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($stack7);

        return;
    }

    public void testSetValue()
    {
        org.apache.commons.lang3.BitFieldTest this;
        long $stack4, $stack7, $stack12, $stack13, $stack17, $stack18, $stack25, $stack28, $stack35, $stack36, $stack40, $stack41;
        org.apache.commons.lang3.BitField $stack2, $stack5, $stack8, $stack9, $stack14, $stack21, $stack22, $stack26, $stack31, $stack32, $stack37;
        int $stack3, $stack6, $stack10, $stack11, $stack15, $stack16, $stack23, $stack24, $stack27, $stack33, $stack34, $stack38, $stack39, j;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        j = 0;

     label1:
        if j >= 128 goto label2;

        $stack32 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack31 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack33 = virtualinvoke $stack31.<org.apache.commons.lang3.BitField: int setValue(int,int)>(0, j);

        $stack34 = virtualinvoke $stack32.<org.apache.commons.lang3.BitField: int getValue(int)>($stack33);

        $stack36 = (long) $stack34;

        $stack35 = (long) j;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack36, $stack35);

        $stack37 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack38 = virtualinvoke $stack37.<org.apache.commons.lang3.BitField: int setValue(int,int)>(0, j);

        $stack41 = (long) $stack38;

        $stack39 = j << 7;

        $stack40 = (long) $stack39;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack41, $stack40);

        j = j + 1;

        goto label1;

     label2:
        j = 0;

     label3:
        if j >= 128 goto label4;

        $stack22 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack21 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack23 = virtualinvoke $stack21.<org.apache.commons.lang3.BitField: int setValue(int,int)>(0, j);

        $stack24 = virtualinvoke $stack22.<org.apache.commons.lang3.BitField: int getValue(int)>($stack23);

        $stack25 = (long) $stack24;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack25, 0L);

        $stack26 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack27 = virtualinvoke $stack26.<org.apache.commons.lang3.BitField: int setValue(int,int)>(0, j);

        $stack28 = (long) $stack27;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack28, 0L);

        j = j + 1;

        goto label3;

     label4:
        $stack2 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack3 = virtualinvoke $stack2.<org.apache.commons.lang3.BitField: int setValue(int,int)>(16256, 128);

        $stack4 = (long) $stack3;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack4, 0L);

        j = 0;

     label5:
        if j >= 2 goto label6;

        $stack9 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack8 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack10 = virtualinvoke $stack8.<org.apache.commons.lang3.BitField: int setValue(int,int)>(0, j);

        $stack11 = virtualinvoke $stack9.<org.apache.commons.lang3.BitField: int getValue(int)>($stack10);

        $stack13 = (long) $stack11;

        $stack12 = (long) j;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack13, $stack12);

        $stack14 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack15 = virtualinvoke $stack14.<org.apache.commons.lang3.BitField: int setValue(int,int)>(0, j);

        $stack18 = (long) $stack15;

        $stack16 = j << 14;

        $stack17 = (long) $stack16;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack18, $stack17);

        j = j + 1;

        goto label5;

     label6:
        $stack5 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack6 = virtualinvoke $stack5.<org.apache.commons.lang3.BitField: int setValue(int,int)>(16384, 2);

        $stack7 = (long) $stack6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack7, 0L);

        return;
    }

    public void testSetShortValue()
    {
        org.apache.commons.lang3.BitFieldTest this;
        long $stack4, $stack7, $stack14, $stack15, $stack21, $stack22, $stack30, $stack34, $stack43, $stack44, $stack50, $stack51;
        org.apache.commons.lang3.BitField $stack2, $stack5, $stack9, $stack10, $stack17, $stack26, $stack27, $stack32, $stack38, $stack39, $stack46;
        short $stack3, $stack6, $stack8, $stack11, $stack12, $stack13, $stack16, $stack18, $stack20, $stack25, $stack28, $stack29, $stack31, $stack33, $stack37, $stack40, $stack41, $stack42, $stack45, $stack47, $stack49;
        int $stack19, $stack48, j;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        j = 0;

     label1:
        if j >= 128 goto label2;

        $stack39 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack38 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack37 = (short) j;

        $stack40 = virtualinvoke $stack38.<org.apache.commons.lang3.BitField: short setShortValue(short,short)>(0, $stack37);

        $stack41 = virtualinvoke $stack39.<org.apache.commons.lang3.BitField: short getShortValue(short)>($stack40);

        $stack44 = (long) $stack41;

        $stack42 = (short) j;

        $stack43 = (long) $stack42;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack44, $stack43);

        $stack46 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack45 = (short) j;

        $stack47 = virtualinvoke $stack46.<org.apache.commons.lang3.BitField: short setShortValue(short,short)>(0, $stack45);

        $stack51 = (long) $stack47;

        $stack48 = j << 7;

        $stack49 = (short) $stack48;

        $stack50 = (long) $stack49;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack51, $stack50);

        j = j + 1;

        goto label1;

     label2:
        j = 0;

     label3:
        if j >= 128 goto label4;

        $stack27 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack26 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack25 = (short) j;

        $stack28 = virtualinvoke $stack26.<org.apache.commons.lang3.BitField: short setShortValue(short,short)>(0, $stack25);

        $stack29 = virtualinvoke $stack27.<org.apache.commons.lang3.BitField: short getShortValue(short)>($stack28);

        $stack30 = (long) $stack29;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack30, 0L);

        $stack32 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack31 = (short) j;

        $stack33 = virtualinvoke $stack32.<org.apache.commons.lang3.BitField: short setShortValue(short,short)>(0, $stack31);

        $stack34 = (long) $stack33;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack34, 0L);

        j = j + 1;

        goto label3;

     label4:
        $stack2 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack3 = virtualinvoke $stack2.<org.apache.commons.lang3.BitField: short setShortValue(short,short)>(16256, 128);

        $stack4 = (long) $stack3;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack4, 0L);

        j = 0;

     label5:
        if j >= 2 goto label6;

        $stack10 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack9 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack8 = (short) j;

        $stack11 = virtualinvoke $stack9.<org.apache.commons.lang3.BitField: short setShortValue(short,short)>(0, $stack8);

        $stack12 = virtualinvoke $stack10.<org.apache.commons.lang3.BitField: short getShortValue(short)>($stack11);

        $stack15 = (long) $stack12;

        $stack13 = (short) j;

        $stack14 = (long) $stack13;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack15, $stack14);

        $stack17 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack16 = (short) j;

        $stack18 = virtualinvoke $stack17.<org.apache.commons.lang3.BitField: short setShortValue(short,short)>(0, $stack16);

        $stack22 = (long) $stack18;

        $stack19 = j << 14;

        $stack20 = (short) $stack19;

        $stack21 = (long) $stack20;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack22, $stack21);

        j = j + 1;

        goto label5;

     label6:
        $stack5 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack6 = virtualinvoke $stack5.<org.apache.commons.lang3.BitField: short setShortValue(short,short)>(16384, 2);

        $stack7 = (long) $stack6;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack7, 0L);

        return;
    }

    public void testByte()
    {
        byte $stack4, $stack8, $stack12, $stack16, $stack20, $stack24, $stack28, $stack32, $stack36, $stack40, $stack44, $stack48, $stack52, $stack56, $stack60, $stack64, $stack68, $stack72, $stack76, $stack79;
        boolean $stack81;
        org.apache.commons.lang3.BitFieldTest this;
        long $stack5, $stack9, $stack13, $stack17, $stack21, $stack25, $stack29, $stack33, $stack37, $stack41, $stack45, $stack49, $stack53, $stack57, $stack61, $stack65, $stack69, $stack73, $stack77;
        org.apache.commons.lang3.BitField $u0, $u1, $u2, $u3, $u4, $u5, $u6, $u7, $u8, $u9, $u10, $u11, $u12, $u13, $u14, $u15, $u16, $u17, $u18, $u19, $u20;
        int $i0;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        $u0 = new org.apache.commons.lang3.BitField;

        specialinvoke $u0.<org.apache.commons.lang3.BitField: void <init>(int)>(0);

        $stack4 = virtualinvoke $u0.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(0, 1);

        $stack5 = (long) $stack4;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $stack5);

        $u1 = new org.apache.commons.lang3.BitField;

        specialinvoke $u1.<org.apache.commons.lang3.BitField: void <init>(int)>(1);

        $stack8 = virtualinvoke $u1.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(0, 1);

        $stack9 = (long) $stack8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $stack9);

        $u2 = new org.apache.commons.lang3.BitField;

        specialinvoke $u2.<org.apache.commons.lang3.BitField: void <init>(int)>(2);

        $stack12 = virtualinvoke $u2.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(0, 1);

        $stack13 = (long) $stack12;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $stack13);

        $u3 = new org.apache.commons.lang3.BitField;

        specialinvoke $u3.<org.apache.commons.lang3.BitField: void <init>(int)>(4);

        $stack16 = virtualinvoke $u3.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(0, 1);

        $stack17 = (long) $stack16;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4L, $stack17);

        $u4 = new org.apache.commons.lang3.BitField;

        specialinvoke $u4.<org.apache.commons.lang3.BitField: void <init>(int)>(8);

        $stack20 = virtualinvoke $u4.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(0, 1);

        $stack21 = (long) $stack20;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(8L, $stack21);

        $u5 = new org.apache.commons.lang3.BitField;

        specialinvoke $u5.<org.apache.commons.lang3.BitField: void <init>(int)>(16);

        $stack24 = virtualinvoke $u5.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(0, 1);

        $stack25 = (long) $stack24;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(16L, $stack25);

        $u6 = new org.apache.commons.lang3.BitField;

        specialinvoke $u6.<org.apache.commons.lang3.BitField: void <init>(int)>(32);

        $stack28 = virtualinvoke $u6.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(0, 1);

        $stack29 = (long) $stack28;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(32L, $stack29);

        $u7 = new org.apache.commons.lang3.BitField;

        specialinvoke $u7.<org.apache.commons.lang3.BitField: void <init>(int)>(64);

        $stack32 = virtualinvoke $u7.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(0, 1);

        $stack33 = (long) $stack32;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(64L, $stack33);

        $u8 = new org.apache.commons.lang3.BitField;

        specialinvoke $u8.<org.apache.commons.lang3.BitField: void <init>(int)>(128);

        $stack36 = virtualinvoke $u8.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(0, 1);

        $stack37 = (long) $stack36;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-128L, $stack37);

        $u9 = new org.apache.commons.lang3.BitField;

        specialinvoke $u9.<org.apache.commons.lang3.BitField: void <init>(int)>(0);

        $stack40 = virtualinvoke $u9.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(1, 0);

        $stack41 = (long) $stack40;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $stack41);

        $u10 = new org.apache.commons.lang3.BitField;

        specialinvoke $u10.<org.apache.commons.lang3.BitField: void <init>(int)>(1);

        $stack44 = virtualinvoke $u10.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(1, 0);

        $stack45 = (long) $stack44;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $stack45);

        $u11 = new org.apache.commons.lang3.BitField;

        specialinvoke $u11.<org.apache.commons.lang3.BitField: void <init>(int)>(2);

        $stack48 = virtualinvoke $u11.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(2, 0);

        $stack49 = (long) $stack48;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $stack49);

        $u12 = new org.apache.commons.lang3.BitField;

        specialinvoke $u12.<org.apache.commons.lang3.BitField: void <init>(int)>(4);

        $stack52 = virtualinvoke $u12.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(4, 0);

        $stack53 = (long) $stack52;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $stack53);

        $u13 = new org.apache.commons.lang3.BitField;

        specialinvoke $u13.<org.apache.commons.lang3.BitField: void <init>(int)>(8);

        $stack56 = virtualinvoke $u13.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(8, 0);

        $stack57 = (long) $stack56;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $stack57);

        $u14 = new org.apache.commons.lang3.BitField;

        specialinvoke $u14.<org.apache.commons.lang3.BitField: void <init>(int)>(16);

        $stack60 = virtualinvoke $u14.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(16, 0);

        $stack61 = (long) $stack60;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $stack61);

        $u15 = new org.apache.commons.lang3.BitField;

        specialinvoke $u15.<org.apache.commons.lang3.BitField: void <init>(int)>(32);

        $stack64 = virtualinvoke $u15.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(32, 0);

        $stack65 = (long) $stack64;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $stack65);

        $u16 = new org.apache.commons.lang3.BitField;

        specialinvoke $u16.<org.apache.commons.lang3.BitField: void <init>(int)>(64);

        $stack68 = virtualinvoke $u16.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(64, 0);

        $stack69 = (long) $stack68;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $stack69);

        $u17 = new org.apache.commons.lang3.BitField;

        specialinvoke $u17.<org.apache.commons.lang3.BitField: void <init>(int)>(128);

        $stack72 = virtualinvoke $u17.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(-128, 0);

        $stack73 = (long) $stack72;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $stack73);

        $u18 = new org.apache.commons.lang3.BitField;

        specialinvoke $u18.<org.apache.commons.lang3.BitField: void <init>(int)>(1);

        $stack76 = virtualinvoke $u18.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(-1, 0);

        $stack77 = (long) $stack76;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-2L, $stack77);

        $u19 = new org.apache.commons.lang3.BitField;

        specialinvoke $u19.<org.apache.commons.lang3.BitField: void <init>(int)>(64);

        $stack79 = virtualinvoke $u19.<org.apache.commons.lang3.BitField: byte setByteBoolean(byte,boolean)>(-63, 0);

        $u20 = new org.apache.commons.lang3.BitField;

        specialinvoke $u20.<org.apache.commons.lang3.BitField: void <init>(int)>(64);

        $i0 = (int) $stack79;

        $stack81 = virtualinvoke $u20.<org.apache.commons.lang3.BitField: boolean isSet(int)>($i0);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($stack81);

        return;
    }

    public void testClear()
    {
        org.apache.commons.lang3.BitFieldTest this;
        long $stack3, $stack6, $stack9;
        org.apache.commons.lang3.BitField $stack1, $stack4, $stack7;
        int $stack2, $stack5, $stack8, $i0, $i1, $i2;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        $stack1 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $i0 = (int) -1;

        $stack2 = virtualinvoke $stack1.<org.apache.commons.lang3.BitField: int clear(int)>($i0);

        $stack3 = (long) $stack2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack3, -16257L);

        $stack4 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $i1 = (int) -1;

        $stack5 = virtualinvoke $stack4.<org.apache.commons.lang3.BitField: int clear(int)>($i1);

        $stack6 = (long) $stack5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack6, -16385L);

        $stack7 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $i2 = (int) -1;

        $stack8 = virtualinvoke $stack7.<org.apache.commons.lang3.BitField: int clear(int)>($i2);

        $stack9 = (long) $stack8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack9, -1L);

        return;
    }

    public void testClearShort()
    {
        org.apache.commons.lang3.BitFieldTest this;
        long $stack3, $stack6, $stack9;
        org.apache.commons.lang3.BitField $stack1, $stack4, $stack7;
        short $stack2, $stack5, $stack8, $s0, $s1, $s2;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        $stack1 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $s0 = (short) -1;

        $stack2 = virtualinvoke $stack1.<org.apache.commons.lang3.BitField: short clearShort(short)>($s0);

        $stack3 = (long) $stack2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack3, -16257L);

        $stack4 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $s1 = (short) -1;

        $stack5 = virtualinvoke $stack4.<org.apache.commons.lang3.BitField: short clearShort(short)>($s1);

        $stack6 = (long) $stack5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack6, -16385L);

        $stack7 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $s2 = (short) -1;

        $stack8 = virtualinvoke $stack7.<org.apache.commons.lang3.BitField: short clearShort(short)>($s2);

        $stack9 = (long) $stack8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack9, -1L);

        return;
    }

    public void testSet()
    {
        org.apache.commons.lang3.BitFieldTest this;
        long $stack3, $stack6, $stack9;
        org.apache.commons.lang3.BitField $stack1, $stack4, $stack7;
        int $stack2, $stack5, $stack8;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        $stack1 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack2 = virtualinvoke $stack1.<org.apache.commons.lang3.BitField: int set(int)>(0);

        $stack3 = (long) $stack2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack3, 16256L);

        $stack4 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack5 = virtualinvoke $stack4.<org.apache.commons.lang3.BitField: int set(int)>(0);

        $stack6 = (long) $stack5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack6, 16384L);

        $stack7 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack8 = virtualinvoke $stack7.<org.apache.commons.lang3.BitField: int set(int)>(0);

        $stack9 = (long) $stack8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack9, 0L);

        return;
    }

    public void testSetShort()
    {
        org.apache.commons.lang3.BitFieldTest this;
        long $stack3, $stack6, $stack9;
        org.apache.commons.lang3.BitField $stack1, $stack4, $stack7;
        short $stack2, $stack5, $stack8;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        $stack1 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack2 = virtualinvoke $stack1.<org.apache.commons.lang3.BitField: short setShort(short)>(0);

        $stack3 = (long) $stack2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack3, 16256L);

        $stack4 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack5 = virtualinvoke $stack4.<org.apache.commons.lang3.BitField: short setShort(short)>(0);

        $stack6 = (long) $stack5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack6, 16384L);

        $stack7 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack8 = virtualinvoke $stack7.<org.apache.commons.lang3.BitField: short setShort(short)>(0);

        $stack9 = (long) $stack8;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack9, 0L);

        return;
    }

    public void testSetBoolean()
    {
        org.apache.commons.lang3.BitFieldTest this;
        long $stack4, $stack6, $stack10, $stack12, $stack16, $stack18, $stack22, $stack24, $stack28, $stack30, $stack34, $stack36;
        org.apache.commons.lang3.BitField $stack1, $stack3, $stack7, $stack9, $stack13, $stack15, $stack19, $stack21, $stack25, $stack27, $stack31, $stack33;
        int $stack2, $stack5, $stack8, $stack11, $stack14, $stack17, $stack20, $stack23, $stack26, $stack29, $stack32, $stack35, $i0, $i1, $i2, $i3, $i4, $i5;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        $stack1 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack2 = virtualinvoke $stack1.<org.apache.commons.lang3.BitField: int set(int)>(0);

        $stack4 = (long) $stack2;

        $stack3 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack5 = virtualinvoke $stack3.<org.apache.commons.lang3.BitField: int setBoolean(int,boolean)>(0, 1);

        $stack6 = (long) $stack5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack4, $stack6);

        $stack7 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack8 = virtualinvoke $stack7.<org.apache.commons.lang3.BitField: int set(int)>(0);

        $stack10 = (long) $stack8;

        $stack9 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack11 = virtualinvoke $stack9.<org.apache.commons.lang3.BitField: int setBoolean(int,boolean)>(0, 1);

        $stack12 = (long) $stack11;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack10, $stack12);

        $stack13 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack14 = virtualinvoke $stack13.<org.apache.commons.lang3.BitField: int set(int)>(0);

        $stack16 = (long) $stack14;

        $stack15 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack17 = virtualinvoke $stack15.<org.apache.commons.lang3.BitField: int setBoolean(int,boolean)>(0, 1);

        $stack18 = (long) $stack17;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack16, $stack18);

        $stack19 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $i0 = (int) -1;

        $stack20 = virtualinvoke $stack19.<org.apache.commons.lang3.BitField: int clear(int)>($i0);

        $stack22 = (long) $stack20;

        $stack21 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $i1 = (int) -1;

        $stack23 = virtualinvoke $stack21.<org.apache.commons.lang3.BitField: int setBoolean(int,boolean)>($i1, 0);

        $stack24 = (long) $stack23;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack22, $stack24);

        $stack25 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $i2 = (int) -1;

        $stack26 = virtualinvoke $stack25.<org.apache.commons.lang3.BitField: int clear(int)>($i2);

        $stack28 = (long) $stack26;

        $stack27 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $i3 = (int) -1;

        $stack29 = virtualinvoke $stack27.<org.apache.commons.lang3.BitField: int setBoolean(int,boolean)>($i3, 0);

        $stack30 = (long) $stack29;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack28, $stack30);

        $stack31 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $i4 = (int) -1;

        $stack32 = virtualinvoke $stack31.<org.apache.commons.lang3.BitField: int clear(int)>($i4);

        $stack34 = (long) $stack32;

        $stack33 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $i5 = (int) -1;

        $stack35 = virtualinvoke $stack33.<org.apache.commons.lang3.BitField: int setBoolean(int,boolean)>($i5, 0);

        $stack36 = (long) $stack35;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack34, $stack36);

        return;
    }

    public void testSetShortBoolean()
    {
        org.apache.commons.lang3.BitFieldTest this;
        long $stack4, $stack6, $stack10, $stack12, $stack16, $stack18, $stack22, $stack24, $stack28, $stack30, $stack34, $stack36;
        org.apache.commons.lang3.BitField $stack1, $stack3, $stack7, $stack9, $stack13, $stack15, $stack19, $stack21, $stack25, $stack27, $stack31, $stack33;
        short $stack2, $stack5, $stack8, $stack11, $stack14, $stack17, $stack20, $stack23, $stack26, $stack29, $stack32, $stack35, $s0, $s1, $s2, $s3, $s4, $s5;

        this := @this: org.apache.commons.lang3.BitFieldTest;

        $stack1 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack2 = virtualinvoke $stack1.<org.apache.commons.lang3.BitField: short setShort(short)>(0);

        $stack4 = (long) $stack2;

        $stack3 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $stack5 = virtualinvoke $stack3.<org.apache.commons.lang3.BitField: short setShortBoolean(short,boolean)>(0, 1);

        $stack6 = (long) $stack5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack4, $stack6);

        $stack7 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack8 = virtualinvoke $stack7.<org.apache.commons.lang3.BitField: short setShort(short)>(0);

        $stack10 = (long) $stack8;

        $stack9 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $stack11 = virtualinvoke $stack9.<org.apache.commons.lang3.BitField: short setShortBoolean(short,boolean)>(0, 1);

        $stack12 = (long) $stack11;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack10, $stack12);

        $stack13 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack14 = virtualinvoke $stack13.<org.apache.commons.lang3.BitField: short setShort(short)>(0);

        $stack16 = (long) $stack14;

        $stack15 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $stack17 = virtualinvoke $stack15.<org.apache.commons.lang3.BitField: short setShortBoolean(short,boolean)>(0, 1);

        $stack18 = (long) $stack17;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack16, $stack18);

        $stack19 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $s0 = (short) -1;

        $stack20 = virtualinvoke $stack19.<org.apache.commons.lang3.BitField: short clearShort(short)>($s0);

        $stack22 = (long) $stack20;

        $stack21 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi>;

        $s1 = (short) -1;

        $stack23 = virtualinvoke $stack21.<org.apache.commons.lang3.BitField: short setShortBoolean(short,boolean)>($s1, 0);

        $stack24 = (long) $stack23;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack22, $stack24);

        $stack25 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $s2 = (short) -1;

        $stack26 = virtualinvoke $stack25.<org.apache.commons.lang3.BitField: short clearShort(short)>($s2);

        $stack28 = (long) $stack26;

        $stack27 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single>;

        $s3 = (short) -1;

        $stack29 = virtualinvoke $stack27.<org.apache.commons.lang3.BitField: short setShortBoolean(short,boolean)>($s3, 0);

        $stack30 = (long) $stack29;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack28, $stack30);

        $stack31 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $s4 = (short) -1;

        $stack32 = virtualinvoke $stack31.<org.apache.commons.lang3.BitField: short clearShort(short)>($s4);

        $stack34 = (long) $stack32;

        $stack33 = <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero>;

        $s5 = (short) -1;

        $stack35 = virtualinvoke $stack33.<org.apache.commons.lang3.BitField: short setShortBoolean(short,boolean)>($s5, 0);

        $stack36 = (long) $stack35;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($stack34, $stack36);

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.lang3.BitField $stack0, $stack1, $stack2;

        $stack0 = new org.apache.commons.lang3.BitField;

        specialinvoke $stack0.<org.apache.commons.lang3.BitField: void <init>(int)>(16256);

        <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_multi> = $stack0;

        $stack1 = new org.apache.commons.lang3.BitField;

        specialinvoke $stack1.<org.apache.commons.lang3.BitField: void <init>(int)>(16384);

        <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_single> = $stack1;

        $stack2 = new org.apache.commons.lang3.BitField;

        specialinvoke $stack2.<org.apache.commons.lang3.BitField: void <init>(int)>(0);

        <org.apache.commons.lang3.BitFieldTest: org.apache.commons.lang3.BitField bf_zero> = $stack2;

        return;
    }
}
