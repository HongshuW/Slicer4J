class org.apache.commons.lang3.text.StrTokenizerTest$2 extends org.apache.commons.lang3.text.StrTokenizer
{
    final org.apache.commons.lang3.text.StrTokenizerTest this$0;

    void <init>(org.apache.commons.lang3.text.StrTokenizerTest, java.lang.String)
    {
        org.apache.commons.lang3.text.StrTokenizerTest l1;
        java.lang.String x0;
        org.apache.commons.lang3.text.StrTokenizerTest$2 this;

        this := @this: org.apache.commons.lang3.text.StrTokenizerTest$2;

        l1 := @parameter0: org.apache.commons.lang3.text.StrTokenizerTest;

        x0 := @parameter1: java.lang.String;

        this.<org.apache.commons.lang3.text.StrTokenizerTest$2: org.apache.commons.lang3.text.StrTokenizerTest this$0> = l1;

        specialinvoke this.<org.apache.commons.lang3.text.StrTokenizer: void <init>(java.lang.String)>(x0);

        return;
    }

    protected java.util.List tokenize(char[], int, int)
    {
        java.util.List $stack6;
        int offset, count;
        char[] $stack5, chars;
        java.lang.String $stack4;
        org.apache.commons.lang3.text.StrTokenizerTest$2 this;

        this := @this: org.apache.commons.lang3.text.StrTokenizerTest$2;

        chars := @parameter0: char[];

        offset := @parameter1: int;

        count := @parameter2: int;

        $stack4 = "w x y z";

        $stack5 = virtualinvoke $stack4.<java.lang.String: char[] toCharArray()>();

        $stack6 = specialinvoke this.<org.apache.commons.lang3.text.StrTokenizer: java.util.List tokenize(char[],int,int)>($stack5, 2, 5);

        return $stack6;
    }
}
