class org.apache.commons.lang3.event.EventListenerSupportTest$2 extends org.apache.commons.lang3.event.EventListenerSupport
{
    final org.apache.commons.lang3.event.EventListenerSupportTest this$0;

    void <init>(org.apache.commons.lang3.event.EventListenerSupportTest, java.lang.Class)
    {
        java.lang.Class x0;
        org.apache.commons.lang3.event.EventListenerSupportTest$2 this;
        org.apache.commons.lang3.event.EventListenerSupportTest l1;

        this := @this: org.apache.commons.lang3.event.EventListenerSupportTest$2;

        l1 := @parameter0: org.apache.commons.lang3.event.EventListenerSupportTest;

        x0 := @parameter1: java.lang.Class;

        this.<org.apache.commons.lang3.event.EventListenerSupportTest$2: org.apache.commons.lang3.event.EventListenerSupportTest this$0> = l1;

        specialinvoke this.<org.apache.commons.lang3.event.EventListenerSupport: void <init>(java.lang.Class)>(x0);

        return;
    }

    protected java.lang.reflect.InvocationHandler createInvocationHandler()
    {
        org.apache.commons.lang3.event.EventListenerSupportTest$2$1 $stack1;
        org.apache.commons.lang3.event.EventListenerSupportTest$2 this;

        this := @this: org.apache.commons.lang3.event.EventListenerSupportTest$2;

        $stack1 = new org.apache.commons.lang3.event.EventListenerSupportTest$2$1;

        specialinvoke $stack1.<org.apache.commons.lang3.event.EventListenerSupportTest$2$1: void <init>(org.apache.commons.lang3.event.EventListenerSupportTest$2)>(this);

        return $stack1;
    }
}
